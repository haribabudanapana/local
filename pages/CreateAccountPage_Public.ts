import { Page, Locator } from '@playwright/test';

export class CreateAccountPage_Public {
	page: Page;
  createNewCustomerAccountHeader: Locator;
  personalInformationTitle: Locator;
  createAnOrganizationalAccountHeader: Locator;
  createAccountBtn: Locator;
  cancelBtn: Locator;
  textOnCreateAcntPage: Locator;
  createAccountHeader: Locator;
  accountPageHeader: Locator;
  activatonAccountHeader: Locator;
  firstNameTextbox: Locator;
  firstNameTextbox1: Locator;
  middleNameTextbox: Locator;
  middleNameTextbox1: Locator;
  lastNameTextbox: Locator;
  lastNameTextbox1: Locator;
  universityTextbox: Locator;
  emailAddressTextbox: Locator;
  emailAddressTextbox1: Locator;
  passwordTextbox: Locator;
  organisationTextbox: Locator;
  additionalOrganisationTextbox: Locator;
  passwordConfirmationTextbox: Locator;
  createAnAccountButton: Locator;
  cancelAnAccountBuuton: Locator;
  cancelAnAccountLink: Locator;
  specCreateAccountBtn: Locator;
  cancelAlertDesc1: Locator;
  cancelAlertDesc2: Locator;
  createAnAccountButtonAPI: Locator;
  cancelAlertHeader: Locator;
  cancelAlertYesButton: Locator;
  cancelAlertNevermindButton: Locator;
  cancelAlertDescription: Locator;
  accountActivationHeader: Locator;
  astmLogoRegistrationRequired: Locator;
  registrationRequiredMessageHeader: Locator;
  registrationRequiredMessage: Locator;
  contactUsLink: Locator;
  emailAddressError: Locator;
  firstNameError: Locator;
  lastNameError: Locator;
  passwordError: Locator;
  passwordConfirmationError: Locator;
  organisationError: Locator;
  cartLinkAfterLogin: Locator;
  labelList: Locator;
  label: Locator;
  companyCheckboxEnable: Locator;
  companyAffiliationCheckbox: Locator;
  signUpNewsLetterCheckbox: Locator;
  firstNameField: Locator;
  middleNameField: Locator;
  lastNameField: Locator;
  organisationField: Locator;
  emailAddressField: Locator;
  passwordField: Locator;
  passwordConfirmationField: Locator;
  errorMessage: Locator;
  signinLinkOnMessage: Locator;
  requiredFieldNameList: Locator;
  fieldErrorMessageFieldNameList: Locator;
  departmentNDivisionDropdown: Locator;
  businessLineDropdown: Locator;
  officeLocationDropdown: Locator;
  registrationFields: Locator;
  firstNameTextbox_ipStepup: Locator;
  middleNameTextbox_ipStepup: Locator;
  lastNameTextbox_ipStepup: Locator;
  universityTextbox_ipStepup: Locator;
  emailAddressTextbox_ipStepup: Locator;
  passwordConfirmationTextbox_ipStepup: Locator;
  createAccount_ipStepup: Locator;
  accountActivationBtn: Locator;
  orgNamePTPAccount: Locator;
  myAccountLabel: Locator;

  constructor(page: Page) {
    this.page = page;
    this.createNewCustomerAccountHeader = page.locator(".page-title span");
    this.personalInformationTitle = page.locator("//span[text()='Personal Information']");
    this.createAnOrganizationalAccountHeader = page.locator("//h3[text()='Create an Organizational Account']");
    this.createAccountBtn = page.locator("//span[text()='Create Account']");
    this.cancelBtn = page.locator("//span[text()='Cancel']");
    this.textOnCreateAcntPage = page.locator("//p[text()='Your orders will be placed under this organizational account']");
    this.createAccountHeader = page.locator("//*[@class='page-title astm-type-heading--h1 ']/span");
    this.accountPageHeader = page.locator("//*[@class='astm-type-heading--h1']");
    this.activatonAccountHeader = page.locator("//h2[text()='Account Activation']");
    this.firstNameTextbox = page.locator("#firstname");
    this.firstNameTextbox1 = page.locator("//input[@id='firstname' and @type='text']");
    this.middleNameTextbox = page.locator("#middlename");
    this.middleNameTextbox1 = page.locator("//input[@id='middlename']");
    this.lastNameTextbox = page.locator("#lastname");
    this.lastNameTextbox1 = page.locator("//input[@id='lastname']");
    this.universityTextbox = page.locator("//input[@id='university' and @readonly]");
    this.emailAddressTextbox = page.locator("#email_address");
    this.emailAddressTextbox1 = page.locator("//input[@id='email_address']");
    this.passwordTextbox = page.locator("#password");
    this.organisationTextbox = page.locator("//input[@id='organization_name']|//input[@id='additional_organization']");
    this.additionalOrganisationTextbox = page.locator("//input[@id='additional_organization']");
    this.passwordConfirmationTextbox = page.locator("#password-confirmation");
    this.createAnAccountButton = page.locator("button[title='Create Account']");
    this.cancelAnAccountBuuton = page.locator("//*[text()='Cancel']");
    this.cancelAnAccountLink = page.locator("//span[text()='Cancel']/parent::a");
    this.specCreateAccountBtn = page.locator("button[type='submit']");
    this.cancelAlertDesc1 = page.locator("//p[@class='astm-type-body--lead']");
    this.cancelAlertDesc2 = page.locator("//p[@class='astm-type-body--lead']");
    this.createAnAccountButtonAPI = page.locator("//*[@class='block-new-customer']//*[text()='Create an Account']");
    this.cancelAlertHeader = page.locator("//*[text()='Are you sure you want to cancel?']");
    this.cancelAlertYesButton = page.locator("//*[text()='Yes'][@class='btn astm-btn astm-btn--small btn-secondary']");
    this.cancelAlertNevermindButton = page.locator("//*[text()='Nevermind'][@class='btn astm-btn astm-btn--small btn-light']");
    this.cancelAlertDescription = page.locator("//p[@class='astm-type-body--lead']");
    this.accountActivationHeader = page.locator("//h2[text()='Account Activation']");
    this.astmLogoRegistrationRequired = page.locator("//img[@alt='astm']");
    this.registrationRequiredMessageHeader = page.locator("//*[contains(text(),'Your Access Requires Registration')]");
    this.registrationRequiredMessage = page.locator("//p[@class='sc-fubCfw irPtrP astm-type-body--lead']");
    this.contactUsLink = page.getByText("contact us");
    this.emailAddressError = page.locator("#email_address-error");
    this.firstNameError = page.locator("#firstname-error");
    this.lastNameError = page.locator("#lastname-error");
    this.passwordError = page.locator("#password-error");
    this.passwordConfirmationError = page.locator("#password-confirmation-error");
    this.organisationError = page.locator("#additional_organization-error");
    this.cartLinkAfterLogin = page.locator("//a[contains(text(), 'Cart')]");
    this.labelList = page.locator("//*[@id='form-validate']//label/span");
    this.label = page.locator("(//*[@id='form-validate']//label/span)[2]");
    this.companyCheckboxEnable = page.locator("#company_affiliation");
    this.companyAffiliationCheckbox = page.locator("//*[@id='form-validate']//*[text()='I do not have a company affiliation']");
    this.signUpNewsLetterCheckbox = page.locator("//*[@id='form-validate']//*[text()='Sign Up for Newsletter']");
    this.firstNameField = page.locator("//*[@id='form-validate']//*[text()='First Name']");
    this.middleNameField = page.locator("//*[@id='form-validate']//*[text()='Middle Name']");
    this.lastNameField = page.locator("//*[@id='form-validate']//*[text()='Last Name']");
    this.organisationField = page.locator("//*[@id='form-validate']//*[contains(text(),'Organization')]");
    this.emailAddressField = page.locator("//*[@id='form-validate']//*[text()='Email']");
    this.passwordField = page.locator("//*[@id='form-validate']//*[text()='Password']");
    this.passwordConfirmationField = page.locator("//*[@id='form-validate']//*[text()='Confirm Password']");
    this.errorMessage = page.locator("//div[@data-bind='html: $parent.prepareMessageForHtml(message.text)']");
    this.signinLinkOnMessage = page.locator(".messages a");
    this.requiredFieldNameList = page.locator("//*[@id='form-validate']//*[contains(@data-validate,'required')]/../preceding-sibling::label");
    this.fieldErrorMessageFieldNameList = page.locator("//*[text()='This is a required field.']/../preceding-sibling::label");
    this.departmentNDivisionDropdown = page.locator("#department_division");
    this.businessLineDropdown = page.locator("#business_line");
    this.officeLocationDropdown = page.locator("#office_location");
    this.registrationFields = page.locator("//*[@id='form-validate']//label[@for!='email_address']/following-sibling::div//input");
    this.firstNameTextbox_ipStepup = page.locator("#firstName");
    this.middleNameTextbox_ipStepup = page.locator("#middlname");
    this.lastNameTextbox_ipStepup = page.locator("#lastName");
    this.universityTextbox_ipStepup = page.locator("//input[@id='university' and @readonly]");
    this.emailAddressTextbox_ipStepup = page.locator("#email");
    this.passwordConfirmationTextbox_ipStepup = page.locator("#confirmPassword");
    this.createAccount_ipStepup = page.locator("//button[text()='Create Account']");
    this.accountActivationBtn = page.locator("//button[text()='Activate Account']");
    this.orgNamePTPAccount = page.locator("//input[@id='organization_name']");
    this.myAccountLabel = page.locator("//h3[text()='My Account']");

      
  }

 



}