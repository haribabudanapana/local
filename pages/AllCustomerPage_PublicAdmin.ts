import { Page, Locator } from '@playwright/test';

export class AllCustomerPage_PublicAdmin {
	page: Page;
  referralCodeForGivenEmail: (b2bAcc: string, referralCodeVal: string) => Locator;
  addNewCustomerButton: Locator;
  userCreationSuccessMessage: Locator;
  searchTextField: Locator;
  searchButton: Locator;
  editButton: Locator;
  editButtonOrg: Locator;
  customerInfoTitle: Locator;
  addNewAddress: Locator;
  addNewContact: Locator;
  telephoneFieldMandatory: Locator;
  requiredPhoneNo: Locator;
  editButtonAddressTable: Locator;
  companyFieldMandatory: Locator;
  closeUpdateAddressBtn: Locator;
  closeUpdateContacBtn: Locator;
  searchIconOnCustomerPage: Locator;
  actionButton: Locator;
  selectButton_CorporateBilling: Locator;
  emailLabel: Locator;
  spinnerIcon: Locator;
  nameLabel: Locator;
  OrdersTab: Locator;
  FirstOrder: Locator;
  customerTypeLabel: Locator;
  webSiteLabel: Locator;
  accountCreatedInLabel: Locator;
  customerIdLabel: Locator;
  MAEaccountTab: Locator;
  MAEusersTab: Locator;
  TypeOfUser: Locator;
  MAEAccountID: Locator;
  filterButton: Locator;
  filterButton_CRPage: Locator;
  emailFilterFieldNew: Locator;
  AccountSearch: Locator;
  emailFilterField: Locator;
  emailFilterField_CorporateBilling: Locator;
  applyFilterButton: Locator;
  applyFilterButton_CorporateBilling: Locator;
  contactFirstName: Locator;
  contactLastName: Locator;
  contactEmail: Locator;
  startDateField: Locator;
  endDateField: Locator;
  saveUpdatedContact: Locator;
  contactsTab: Locator;
  contactsDetials: Locator;
  allContactsDetials: Locator;
  clearAllButton: Locator;
  clearAllButton2: Locator;
  fromIdTextField: Locator;
  toTextField: Locator;
  loadingIcon: Locator;
  customreTypeDropDown: Locator;
  websiteDropDown: Locator;
  organizationName: Locator;
  ebsAccountNumberLabel: Locator;
  columnsButton: Locator;
  referralCodeColumnCheckboxInputTab: Locator;
  referralCodeColumnCheckbox: Locator;
  referralCodeColumn: Locator;
  referralCodeColumnResults: Locator;
  ofPageLabel: Locator;
  pageNumberTextField: Locator;
  referralCodeFilterField: Locator;
  columnNamesInTable: Locator;
  billingAddressText: Locator;
  shippingAddressText: Locator;
  addressTab: Locator;
  contactsTab1: Locator;
  learnerContactEmail: Locator;
  learnerContactFname: Locator;
  learnerContactLName: Locator;
  shpiingCharges: Locator;
  shpiingMethod: Locator;
  EmailHeader: Locator;

  constructor(page: Page) {
    this.page = page;
    this.referralCodeForGivenEmail = (b2bAcc: string, referralCodeVal: string) =>
    page.locator(`//div[text()='${b2bAcc}']/parent::td/following-sibling::td/div[text()='${referralCodeVal}']`);
    this.addNewCustomerButton = page.locator("button#add");
    this.userCreationSuccessMessage = page.locator(".message-success");
    this.searchTextField = page.locator("input[placeholder='Search by keyword']");
    this.searchButton = page.locator("#container > div > div.admin__data-grid-header > div:nth-child(1) > div.data-grid-search-control-wrap > button");
    this.editButton = page.locator("a[href*='/index/edit/']");
    this.editButtonOrg = page.locator("//table//tbody//tr[td//div[contains(normalize-space(.), 'Organization')]]//*[contains(text(), 'Edit')]");
    this.customerInfoTitle = page.locator("//div[@class = 'admin__page-nav-title']");
    this.addNewAddress = page.locator("//button[contains(@class, 'add-new-address')]");
    this.addNewContact = page.locator("//button[contains(@class, 'add-new-contact-button action-basic')]");
    this.telephoneFieldMandatory = page.locator("(//input[@class= 'admin__control-text' and @name='phone'])[2]");
    this.requiredPhoneNo = page.locator("(//input[@class='admin__control-text' and @name='phone'])[2]/ancestor::div[contains(@class, 'admin__field') and contains(@class, '_required')]");
    this.editButtonAddressTable = page.locator("//table//tbody//tr//a[text()='Edit']");
    this.companyFieldMandatory = page.locator("//input[@disabled='true' and @name= 'company']");
    this.closeUpdateAddressBtn = page.locator("//div[@class='modal-inner-wrap'][.//h1[contains(text(), 'Add/Update Address')]]//button[contains(@class,'close')]");
    this.closeUpdateContacBtn = page.locator("//div[@class='modal-inner-wrap'][.//h1[contains(text(), 'Add/Update Contact')]]//button[contains(@class,'close')]");
    this.searchIconOnCustomerPage = page.locator("(//button[@class='action-submit' and @aria-label='Search'])[1]");
    this.actionButton = page.locator("(//button[@class='action-submit'])[2]");
    this.selectButton_CorporateBilling = page.locator("//button[text()='Select']");
    this.emailLabel = page.locator("tr.data-row td:nth-of-type(4)");
    this.spinnerIcon = page.locator("div[data-component='customer_listing.customer_listing.customer_columns'] .spinner");
    this.nameLabel = page.locator("tr.data-row td:nth-of-type(3)");
    this.OrdersTab = page.locator("//a[@id='tab_orders_content']");
    this.FirstOrder = page.locator("(//td[contains(@class,'col-increment_id')])[2]");
    this.customerTypeLabel = page.locator("tr.data-row td:nth-of-type(5)");
    this.webSiteLabel = page.locator("tr.data-row td:nth-of-type(12)");
    this.accountCreatedInLabel = page.locator("tr.data-row td:nth-of-type(14)");
    this.customerIdLabel = page.locator("tr.data-row td:nth-of-type(2)");
    this.MAEaccountTab = page.locator("#tab_mae_relationships");
    this.MAEusersTab = page.locator("#tab_organization");
    this.TypeOfUser = page.locator("//div[contains(@class,'admin__data-grid-wrap')]/table/thead/tr/th/span[text()='Type']/../../../following-sibling::tbody/tr/td[2]");
    this.MAEAccountID = page.locator("//div[contains(@class,'admin__data-grid-wrap')]/table/thead/tr/th/span[text()='MAE Account Id']/../../../following-sibling::tbody/tr/td[3]");
    this.filterButton = page.locator("//button[contains(text(),'Filters')]");
    this.filterButton_CRPage = page.locator("(//button[contains(text(),'Filters')])[2]");
    this.emailFilterFieldNew = page.locator("(//*[@id='fulltext'])[1]");
    this.AccountSearch = page.locator("(//label[@title='Search']/../input[@id='fulltext'])[1]");
    this.emailFilterField = page.locator("input[name='email']");
    this.emailFilterField_CorporateBilling = page.locator("(//input[@name='email'])[2]");
    this.applyFilterButton = page.locator("//span[contains(text(),'Apply Filters')]");
    this.applyFilterButton_CorporateBilling = page.locator("(//span[contains(text(),'Apply Filters')])[2]");
    this.contactFirstName = page.locator("(//input[@name='first_name'])[2]");
    this.contactLastName = page.locator("(//input[@name='last_name'])[2]");
    this.contactEmail = page.locator("(//input[@name='email'])[2]");
    this.startDateField = page.locator("input[name='start_date']");
    this.endDateField = page.locator("input[name='end_date']");
    this.saveUpdatedContact = page.locator("(//div[@class='page-actions floating-header']//button[@id='save'])[2]");
    this.contactsTab = page.locator("#tab_contact");
    this.contactsDetials = page.locator("tbody > tr.data-row > td >div");
    this.allContactsDetials = page.locator("//tr[contains(@class,'data-row')]/td/div");
    this.clearAllButton = page.locator(".admin__data-grid-header button.action-clear");
    this.clearAllButton2 = page.locator("(//button[contains(text(),'Clear all')])[2]");
    this.fromIdTextField = page.locator("input[name='entity_id[from]']");
    this.toTextField = page.locator("input[name='entity_id[to]']");
    this.loadingIcon = page.locator("div[data-component='customer_form.areas'] .spinner");
    this.customreTypeDropDown = page.locator("select[name='customer_type']");
    this.websiteDropDown = page.locator(".admin__data-grid-filters select[name='website_id']");
    this.organizationName = page.locator("tr.data-row td:nth-of-type(19)");
    this.ebsAccountNumberLabel = page.locator("tr.data-row td:nth-of-type(21)");
    this.columnsButton = page.locator("div.admin__data-grid-actions-wrap:nth-child(1) button span[data-bind*='Columns']");
    this.referralCodeColumnCheckboxInputTab = page.locator("(//label[@title='Referral Code']/preceding-sibling::input)[1]");
    this.referralCodeColumnCheckbox = page.locator("(//label[@title='Referral Code'])[1]");
    this.referralCodeColumn = page.locator("//table[@data-role='grid']//span[contains(text(),'Referral Code')]");
    this.referralCodeColumnResults = page.locator("tr.data-row td:nth-of-type(23)");
    this.ofPageLabel = page.locator("div.admin__data-grid-pager-wrap:nth-child(1) input[type='number'] + label");
    this.pageNumberTextField = page.locator("div.admin__data-grid-pager-wrap:nth-child(1) input[type='number']");
    this.referralCodeFilterField = page.locator("select[name='referral_code']");
    this.columnNamesInTable = page.locator("table[data-role='grid'] > thead .data-grid-cell-content");
    this.billingAddressText = page.locator("//div[contains(@class,'customer-default-billing-address-content')]/descendant::div[contains(@class,'address_details')]");
    this.shippingAddressText = page.locator("//div[contains(@class,'customer-default-shipping-address-content')]/descendant::div[contains(@class,'address_details')]");
    this.addressTab = page.locator("//a[@id='tab_address']");
    this.contactsTab1 = page.locator("//a[@id='tab_contact']");
    this.learnerContactEmail = page.locator("(//tr[@class='data-row'])[2]/td[5]/div");
    this.learnerContactFname = page.locator("(//tr[@class='data-row'])[2]/td[2]/div");
    this.learnerContactLName = page.locator("(//tr[@class='data-row'])[2]/td[4]/div");
    this.shpiingCharges = page.locator("//div[@class='order-shipping-method-info']/descendant::strong/span");
    this.shpiingMethod = page.locator("//div[@class='order-shipping-method-info']/dl/dd");
    this.EmailHeader = page.locator("(//span[text()='Email'])[2]");

      
  }

 



}