import { Page, Locator } from '@playwright/test';

export class CreateNewOrderPage_PublicAdmin {
	page: Page;
  PaymentMethod: Locator;
  acceptBtnOnSubmit: Locator;
  creditcardNo: Locator;
  expirationMonth: Locator;
  expirationYear: Locator;
  cvvNumber: Locator;
  creditcardOption: Locator;
  addProductBySkuButton: Locator;
  skuNumberTextField: Locator;
  quantityTextField: Locator;
  addToOrderButton: Locator;
  spinnerIcon: Locator;
  addProductsButton: Locator;
  searchProductNameTextField: Locator;
  firstSearchResult: Locator;
  productQuantityTextField: Locator;
  addSelectedProductsToOrderButton: Locator;
  invalidSkuErrorMessage: Locator;
  wireTrabsferRadioButton: Locator;
  getShippingMethodsAndRatesLink: Locator;
  flatRateRadioButton: Locator;
  submitOrderButton: Locator;
  majorPromoCodeDropDown: Locator;
  minorPromoCodeDropDown: Locator;
  orderChannelDropDown: Locator;
  searchButton: Locator;
  skuFileUpload: Locator;
  skuNumbersInItemOrderedList: Locator;
  ebsSkuNumbersInItemOrderedList: Locator;
  priceInItemOrderedList: Locator;
  subTotalInItemOrderedList: Locator;
  rowTotalInItemOrderedList: Locator;
  rowSubscriptionTypeList: Locator;
  productNamesInItemOrderedList: Locator;
  firstNameFieldUnderBillingAddress: Locator;
  lastNameFieldUnderBillingAddress: Locator;
  cityTextFieldUnderBillingAddress: Locator;
  zipCodeTextFieldUnderBillingAddress: Locator;
  phoneNumberTextFieldUnderBillingAddress: Locator;
  countryDropDownUnderBillingAddress: Locator;
  stateDropDownUnderBillingAddress: Locator;
  firstNameFieldUnderShippingAddress: Locator;
  lastNameFieldUnderShippingAddress: Locator;
  cityTextFieldUnderShippingAddress: Locator;
  zipCodeTextFieldUnderShippingAddress: Locator;
  phoneNumberTextFieldUnderShippingAddress: Locator;
  countryDropDownUnderShippingAddress: Locator;
  stateDropDownUnderShippingAddress: Locator;
  firstNameFieldUnderFreightForwardAddress: Locator;
  lastNameFieldUnderFreightForwardAddress: Locator;
  cityTextFieldUnderFreightForwardAddress: Locator;
  zipCodeTextFieldUnderFreightForwardAddress: Locator;
  phoneNumberTextFieldUnderFreightForwardAddress: Locator;
  countryDropDownUnderFreightForwardAddress: Locator;
  stateDropDownUnderFreightForwardAddress: Locator;
  invoiceRadioButton: Locator;
  ccTerminalPaymnetMethod: Locator;
  ChangeShippingMethodlink: Locator;
  wiretTransferPaymentMethod: Locator;
  ccPaymentMethod: Locator;
  poNumberTextField: Locator;
  poError: Locator;
  fileCorruptErrorMessage: Locator;
  orderTypeDropDown: Locator;
  productActionDropDown: Locator;
  deliveryMethodCodeDropDown: Locator;
  deliveryPlatformIdDropDown: Locator;
  licenseTypeCodeDropDown: Locator;
  updateItemButton: Locator;
  fromPriceTextField: Locator;
  toPriceTextField: Locator;
  sortByPriceLabel: Locator;
  priceList: Locator;
  billingAddressDropDown: Locator;
  shippingAddressDropDown: Locator;
  sameAsBillingAddressCheckBox: Locator;
  sameAsBillingAddressCheckboxInput: Locator;
  specifyFrieghtForwardAddressCheckBox: Locator;
  specifyFrieghtForwardAddressCheckBoxInout: Locator;
  frieghtForwardAddressDropDown: Locator;
  orderCommentTextArea: Locator;
  groupDropDown: Locator;
  emailField: Locator;
  streetAddressFirstTextFieldForBillingAddress: Locator;
  streetAddressFirstTextFieldForShippingAddress: Locator;
  streetAddressFirstTextFieldForFreightForwardAddress: Locator;
  streetAddressSecondTextFieldForBillingAddress: Locator;
  streetAddressSecondTextFieldForShippingAddress: Locator;
  streetAddressSecondTextFieldForFreightForwardAddress: Locator;
  streetAddressThirdTextFieldForBillingAddress: Locator;
  streetAddressThirdTextFieldForShippingAddress: Locator;
  streetAddressThirdTextFieldForFreightForwardAddress: Locator;
  streetAddressForthTextFieldForBillingAddress: Locator;
  streetAddressForthTextFieldForShippingAddress: Locator;
  streetAddressForthTextFieldForFreightForwardAddress: Locator;
  companyBillingAddress: Locator;
  companyShippingAddress: Locator;
  companyFreightForwardAddress: Locator;
  nameSuffixBillingAddress: Locator;
  nameSuffixShippingAddress: Locator;
  nameSuffixFreightForwardAddress: Locator;
  middleNameBillingAddress: Locator;
  middleNameShippingAddress: Locator;
  middleNameFreightForwardAddress: Locator;
  vatNumberBillingAddress: Locator;
  vatNumberShippingAddress: Locator;
  vatNumberFreightForwardAddress: Locator;
  deliveryMethodCodeDropDowns: Locator;
  deliveryPlatformIdDropDowns: Locator;
  licenseTypeCodeDropDowns: Locator;
  subscriptionTypeCodeDropDowns: Locator;
  productItemIdTextFields: Locator;
  shippngMethodDropDown: Locator;
  shippingAccountNumberTextField: Locator;
  selectButton: Locator;
  customerShipppingAccountRadioButton: Locator;
  fixedRadioButton: Locator;
  freeShippingRadioButton: Locator;
  shippingMethodRequiredMessage: Locator;
  skuSearchTextField: Locator;
  contactUnderBillingAddressDropDown: Locator;
  contactUnderShippingAddressDropDown: Locator;
  contactUnderFreightForwardAddressDropDown: Locator;
  addAnotherButton: Locator;
  skuNumberFieldTwo: Locator;
  skuProductQuantityTextField: Locator;
  subTotal: Locator;
  shippingAndHandlingCharges: Locator;
  grandTotalExclTaxes: Locator;
  TaxOrderTotal: Locator;
  grandTotalWithTaxes: Locator;
  contactTableHeader: Locator;
  contactRequiredErrorMessage: Locator;
  productNameInItemOrderedList: Locator;
  productQuantityInItemOrderedList: Locator;
  contactDropDownUnderItemOrdered: Locator;
  contactDropDownUnderBillingAddress: Locator;
  contactDropDownUnderShippingAddress: Locator;
  licenseDropDownUnderItemOrdered: Locator;
  emailOrderConfirmationCheckBox: Locator;
  publishDateColumnHeader: Locator;
  subscriptionTypeColumnHeader: Locator;
  startDateColumnHeader: Locator;
  startDateField: Locator;
  publishDateField: Locator;
  subscriptionTypeDropDown: Locator;
  astmShippingMethods: Locator;
  astmShippingMethodsRates: Locator;
  customPriceCheckBox: Locator;
  customPriceTextField: Locator;
  clickToChangeShippingMethod: Locator;
  fedex2ndDayDeliveryRadioButton: Locator;
  dhlIntlStandardRadioButton: Locator;
  getCompanyNameUnderBillingAddress: Locator;
  getCompanyNameUnderShippingAddress: Locator;
  getCompanyNameUnderFreightForwardAddress: Locator;
  fedexOverNightDelivery: Locator;
  doubleBookingError: Locator;
  standardService: Locator;
  getPaymentMethod: Locator;
  totalPriceItemOrdered: Locator;
  productNameUnderSearch: Locator;
  skuUnderSearch: Locator;
  identiyingNumberRequiredError: Locator;
  paymentMethodDropDown: Locator;
  PaymentandShippingInfoLabel: Locator;
  receiptMethodDropDown: Locator;
  amountTextFieldUnderPayment: Locator;
  identifyingNumberTextField: Locator;
  contactUnderBillingAddress: Locator;
  contactUnderShippingAddress: Locator;
  contactUnderFreightForwardAddress: Locator;
  promoCodeErrorMessage: Locator;
  priceOfProductByIndex: Locator;
  scrollElement: Locator;
  faxUnderBillingAddress: Locator;
  faxUnderShippingAddress: Locator;
  faxUnderFreighForwardAddress: Locator;
  addressDescriptionUnderBillingAddress: Locator;
  addressDescriptionUnderShippingAddress: Locator;
  addressDescriptionUnderFreightForwardAddress: Locator;
  OrderTotalBookDealerDiscount: Locator;
  OrderTotalMemberDiscount: Locator;
  OrderTotalSubscriptionDiscount: Locator;
  subTotalUnderItemOrdered: Locator;
  productSKU: Locator;
  discountUnderItemOrdered: Locator;
  BookDealerDiscount: Locator;
  MemberDiscount: Locator;
  SubscriptionAgencyDiscount: Locator;
  RowTaxAmount: Locator;
  RowSubtotalAmount: Locator;
  QuantityNumber: Locator;
  recordFoundLabel: Locator;
  resetFilter: Locator;
  sortBySkuOnSearchPage: Locator;
  skuSearchResults: Locator;
  skuSearchResultsName: Locator;
  skuSearchResultsPrice: Locator;
  selectProductFromListCheckbox: Locator;
  quantityTextFieldsUnderSearchResult: Locator;
  productPricesListUnderItemOrderedTable: Locator;
  productRowSubtotalUnderItemOrderedTable: Locator;
  pageHeading: Locator;
  noRecordFoundMessageForAddProducts: Locator;
  productAssignedToOtherWebsiteErrorMessage: Locator;
  addProductsToOrder: Locator;
  removeAllButton: Locator;
  productRequireAttentionWarningMessage: Locator;
  removeButton: Locator;
  consortiaFlagDropDown: Locator;
  totalSubtotalPrice: Locator;
  noShippingQuotesAvailableMessage: Locator;
  selectedShippingMethodLabel: Locator;
  shippingInformationUnderOrderTotal: Locator;
  imexIntlOvernightTracableShippingMethod: Locator;
  standardServiceInputTag: Locator;
  customerShippingAccount: Locator;
  shippingMethodEBSDropdown: Locator;
  shippingAccount: Locator;
  upsOvernightDeliveryShippingMethod: Locator;
  quantityFieldUnderItemOrdered: Locator;
  closeSpecialHandlingDialogBox: Locator;
  fedexStandardGroundButton: Locator;
  royaltyErrorMessage: Locator;
  orderTotalLabels: Locator;
  orderTotalPrice: Locator;
  membershipDiscountColumnUnderItemOrderedValues: Locator;
  TPTOneQuantityError: Locator;
  itemOrderedColumn: Locator;
  standardServiceRate: Locator;
  shippingInfo: Locator;
  PaymentMethodHeader: Locator;
  contractDropdown: Locator;
  firstRowSalesOrderTable: Locator;
  participantsInput: Locator;
  okButton: Locator;
  ups2ndDeliveryMethod: Locator;
  monthDropDown: Locator;
  yearDropDown: Locator;
  activeDateLabel: Locator;
  goToTodayButton: Locator;
  closeButtonForCalender: Locator;
  startDateCalenderIcon: Locator;
  publishDateCalenderIcon: Locator;
  updateItemPopTextMessage: Locator;
  dialogOkButton: Locator;
  crossButton: Locator;
  cancelButton: Locator;
  ebsSkuFilterField: Locator;
  ebsSkuSearchResults: Locator;
  startDateErrorMessage: Locator;
  publishDateErrorMessage: Locator;
  addProductByEbsSkuButton: Locator;
  addAnotherButtonForEbsSku: Locator;
  addToOrderForEbsSkuFunc: Locator;
  productNameSearchResult: Locator;
  orderItemList: Locator;
  getDuplicateTPTProductErrorMsge: () => Locator;
  changeShippingMethod: Locator;
  standardServicePrice: Locator;
  FEDEX2ndDayDeliveryCheckbox: Locator;
  FEDEX2ndDayDelivery: Locator;
  shippingCharge: Locator;
  ShippingTableRate: Locator;
  changeShippingCheckbox: (value: string) => Locator;
  changeShippingPrice: (value: string) => Locator;

  constructor(page: Page) {
    this.page = page;
    this.PaymentMethod = page.locator("//span[text()='Payment Method']/parent::div/following-sibling::div/descendant::label");
this.acceptBtnOnSubmit = page.locator("//button[contains(@class,'action-accept')]/span[text()='OK']");
this.creditcardNo = page.locator("//input[@id='credit-card-number']");
this.expirationMonth = page.locator("//input[@id='expiration-month']");
this.expirationYear = page.locator("//input[@id='expiration-year']");
this.cvvNumber = page.locator("//input[@id='cvv']");
this.creditcardOption = page.locator("//input[@id='p_method_braintree']");
this.addProductBySkuButton = page.locator("//span[contains(text(),'Add Products By SKU')]");
this.skuNumberTextField = page.locator("input#sku_0");
this.quantityTextField = page.locator("input#sku_qty_0");
this.addToOrderButton = page.locator("div#order-additional_area button[title='Add to Order']");
this.spinnerIcon = page.locator(".popup-loading");
this.addProductsButton = page.locator("button#add_products");
this.searchProductNameTextField = page.locator("#sales_order_create_search_grid_filter_name");
this.firstSearchResult = page.locator("#sales_order_create_search_grid_table tbody tr:first-child");
this.productQuantityTextField = page.locator("table#sales_order_create_search_grid_table input[name='qty']");
this.addSelectedProductsToOrderButton = page.locator("button[title='Add Selected Product(s) to Order']");
this.invalidSkuErrorMessage = page.locator("#sku_errors_table .message-notice");
this.wireTrabsferRadioButton = page.locator("input[title='EFT - Wire Transfer']");
this.getShippingMethodsAndRatesLink = page.locator("//span[contains(text(),'Get shipping methods and rates')]");
this.flatRateRadioButton = page.locator("input[name='order[shipping_method]']");
this.submitOrderButton = page.locator("#submit_order_top_button");
this.majorPromoCodeDropDown = page.locator("select#promo-code-major");
this.minorPromoCodeDropDown = page.locator("select#promo-code-minor");
this.orderChannelDropDown = page.locator("select#sales-channel");
this.searchButton = page.locator("#order-search button[title='Search']");
this.skuFileUpload = page.locator("input#sku_upload");
this.skuNumbersInItemOrderedList = page.locator("td.col-product div.product-sku-block:nth-of-type(1)");
this.ebsSkuNumbersInItemOrderedList = page.locator("td.col-product div.product-sku-block:nth-of-type(2)");
this.priceInItemOrderedList = page.locator("//td[@class='col-price']/span");
this.subTotalInItemOrderedList = page.locator("//td[@class='col-subtotal col-price']/span");
this.rowTotalInItemOrderedList = page.locator("//td[@class='col-price col-row-subtotal']/span");
this.rowSubscriptionTypeList = page.locator("//td[@class='col-price col-row-subtotal']/span");
this.productNamesInItemOrderedList = page.locator("table.order-tables tbody span[id*='order_item_']");
this.firstNameFieldUnderBillingAddress = page.locator("input#order-billing_address_firstname");
this.lastNameFieldUnderBillingAddress = page.locator("input#order-billing_address_lastname");
this.cityTextFieldUnderBillingAddress = page.locator("input#order-billing_address_city");
this.zipCodeTextFieldUnderBillingAddress = page.locator("input#order-billing_address_postcode");
this.phoneNumberTextFieldUnderBillingAddress = page.locator("input#order-billing_address_telephone");
this.countryDropDownUnderBillingAddress = page.locator("select#order-billing_address_country_id");
this.stateDropDownUnderBillingAddress = page.locator("select#order-billing_address_region_id");
this.firstNameFieldUnderShippingAddress = page.locator("input#order-shipping_address_firstname");
this.lastNameFieldUnderShippingAddress = page.locator("input#order-shipping_address_lastname");
this.cityTextFieldUnderShippingAddress = page.locator("input#order-shipping_address_city");
this.zipCodeTextFieldUnderShippingAddress = page.locator("input#order-shipping_address_postcode");
this.phoneNumberTextFieldUnderShippingAddress = page.locator("input#order-shipping_address_telephone");
this.countryDropDownUnderShippingAddress = page.locator("select#order-shipping_address_country_id");
this.stateDropDownUnderShippingAddress = page.locator("select#order-shipping_address_region_id");
this.firstNameFieldUnderFreightForwardAddress = page.locator("input#order-freight_forward_address_firstname");
this.lastNameFieldUnderFreightForwardAddress = page.locator("input#order-freight_forward_address_lastname");
this.cityTextFieldUnderFreightForwardAddress = page.locator("input#order-freight_forward_address_city");
this.zipCodeTextFieldUnderFreightForwardAddress = page.locator("input#order-freight_forward_address_postcode");
this.phoneNumberTextFieldUnderFreightForwardAddress = page.locator("input#order-freight_forward_address_telephone");
this.countryDropDownUnderFreightForwardAddress = page.locator("select#order-freight_forward_address_country_id");
this.stateDropDownUnderFreightForwardAddress = page.locator("select#order-freight_forward_address_region_id");
this.invoiceRadioButton = page.locator("label[for='p_method_astminvoice']");
this.ccTerminalPaymnetMethod = page.locator("//input[@title='CC Terminal/Check']/..");
this.ChangeShippingMethodlink = page.locator("//span[text()='Click to change shipping method']");
this.wiretTransferPaymentMethod = page.locator("label[for='p_method_astmeft']");
this.ccPaymentMethod = page.locator("label[for='p_method_braintree']");
this.poNumberTextField = page.locator("input#po-number");
this.poError = page.locator("[id='po-number-error']");
this.fileCorruptErrorMessage = page.locator("div[data-ui-id='message-message-error']");
this.orderTypeDropDown = page.locator("select#ebs_order_type");
this.productActionDropDown = page.locator("select[name*='[action]']");
this.deliveryMethodCodeDropDown = page.locator("select[name*='[pim_delivery_method_code]']");
this.deliveryPlatformIdDropDown = page.locator("select[name*='[pim_delivery_platform_id]']");
this.licenseTypeCodeDropDown = page.locator("select[name*='[compass_license_type]']");
this.updateItemButton = page.locator("//button[@title='Update Items and Quantities']");
this.fromPriceTextField = page.locator("#sales_order_create_search_grid_filter_price_from");
this.toPriceTextField = page.locator("#sales_order_create_search_grid_filter_price_to");
this.sortByPriceLabel = page.locator("#sales_order_create_search_grid_table th[data-sort='price']");
this.priceList = page.locator("#sales_order_create_search_grid_table tbody td.col-price");
this.billingAddressDropDown = page.locator("select#order-billing_address_customer_address_id");
this.shippingAddressDropDown = page.locator("select#order-shipping_address_customer_address_id");
this.sameAsBillingAddressCheckBox = page.locator("input#order-shipping_same_as_billing + label");
this.sameAsBillingAddressCheckboxInput = page.locator("input#order-shipping_same_as_billing");
this.specifyFrieghtForwardAddressCheckBox = page.locator("input#specify-freight-forward-address + label");
this.specifyFrieghtForwardAddressCheckBoxInout = page.locator("input#specify-freight-forward-address");
this.frieghtForwardAddressDropDown = page.locator("select#order-freight_forward_address_customer_address_id");
this.orderCommentTextArea = page.locator("textarea#order-comment");
this.groupDropDown = page.locator("select#group_id");
this.emailField = page.locator("input#email");

this.streetAddressFirstTextFieldForBillingAddress = page.locator("input#order-billing_address_street0");
this.streetAddressFirstTextFieldForShippingAddress = page.locator("input#order-shipping_address_street0");
this.streetAddressFirstTextFieldForFreightForwardAddress = page.locator("input#order-freight_forward_address_street0");

this.streetAddressSecondTextFieldForBillingAddress = page.locator("input#order-billing_address_street1");
this.streetAddressSecondTextFieldForShippingAddress = page.locator("input#order-shipping_address_street1");
this.streetAddressSecondTextFieldForFreightForwardAddress = page.locator("input#order-freight_forward_address_street1");
this.streetAddressThirdTextFieldForBillingAddress = page.locator("input#order-billing_address_street2");
this.streetAddressThirdTextFieldForShippingAddress = page.locator("input#order-shipping_address_street2");
this.streetAddressThirdTextFieldForFreightForwardAddress = page.locator("input#order-freight_forward_address_street2");

this.streetAddressForthTextFieldForBillingAddress = page.locator("input#order-billing_address_street3");
this.streetAddressForthTextFieldForShippingAddress = page.locator("input#order-shipping_address_street3");
this.streetAddressForthTextFieldForFreightForwardAddress = page.locator("input#order-freight_forward_address_street3");

this.companyBillingAddress = page.locator("#order-billing_address_company");
this.companyShippingAddress = page.locator("#order-shipping_address_company");
this.companyFreightForwardAddress = page.locator("#order-freight_forward_address_company");

this.nameSuffixBillingAddress = page.locator("#order-billing_address_suffix");
this.nameSuffixShippingAddress = page.locator("#order-shipping_address_suffix");
this.nameSuffixFreightForwardAddress = page.locator("#order-freight_forward_address_suffix");

this.middleNameBillingAddress = page.locator("#order-billing_address_middlename");
this.middleNameShippingAddress = page.locator("#order-shipping_address_middlename");
this.middleNameFreightForwardAddress = page.locator("#order-freight_forward_address_middlename");

this.vatNumberBillingAddress = page.locator("#order-billing_address_vat_id");
this.vatNumberShippingAddress = page.locator("#order-shipping_address_vat_id");
this.vatNumberFreightForwardAddress = page.locator("#order-freight_forward_address_vat_id");

this.deliveryMethodCodeDropDowns = page.locator("select[name*='[pim_delivery_method_code]']");
this.deliveryPlatformIdDropDowns = page.locator("select[name*='[pim_delivery_platform_id]']");
this.licenseTypeCodeDropDowns = page.locator("select[name*='[pim_license_type_code]']");
this.subscriptionTypeCodeDropDowns = page.locator("select[name*='subscription_type']");
this.productItemIdTextFields = page.locator("input[name*='[pim_product_item_id]']");
this.shippngMethodDropDown = page.locator("select#customer_shipping_account_method");
this.shippingAccountNumberTextField = page.locator("input#shipping-acct");
this.selectButton = page.locator(".order-shipping-method button");
this.customerShipppingAccountRadioButton = page.locator("label[for='s_method_customershippingaccount']");
this.fixedRadioButton = page.locator("label[for='s_method_flatrate_flatrate']");
this.freeShippingRadioButton = page.locator("label[for='s_method_freeshipping_freeshipping']");
this.shippingMethodRequiredMessage = page.locator("label[id='order[has_shipping]-error']");
this.skuSearchTextField = page.locator("#sales_order_create_search_grid_filter_sku");
this.contactUnderBillingAddressDropDown = page.locator("#order-billing_address_customer_contact_id");
this.contactUnderShippingAddressDropDown = page.locator("#order-shipping_address_customer_contact_id");
this.contactUnderFreightForwardAddressDropDown = page.locator("#order-freight_forward_address_customer_contact_id");
this.addAnotherButton = page.locator("button[data-ui-id=additional-area-sku-add-addbutton]");
this.skuNumberFieldTwo = page.locator("input#sku_1");
this.skuProductQuantityTextField = page.locator("input#sku_qty_1");

this.subTotal = page.locator("table.admin__table-secondary tr:nth-of-type(1) td:last-child span");
this.shippingAndHandlingCharges = page.locator("table.admin__table-secondary tr:nth-of-type(2) td:last-child span");
this.grandTotalExclTaxes = page.locator("table.admin__table-secondary tr:nth-of-type(3) td:last-child span");
this.TaxOrderTotal = page.locator("table.admin__table-secondary tr:nth-of-type(4) td:last-child span");
this.grandTotalWithTaxes = page.locator("table.admin__table-secondary tr:nth-of-type(6) td:last-child span");

this.contactTableHeader = page.locator("th.col-contact");
this.contactRequiredErrorMessage = page.locator(".order-tables select[name*='customer_contact_id'] + label.mage-error");
this.productNameInItemOrderedList = page.locator("table.order-tables td.col-product > span");
this.productQuantityInItemOrderedList = page.locator("table.order-tables td.col-qty input");
this.contactDropDownUnderItemOrdered = page.locator(".order-tables select[name*='customer_contact_id']");
this.contactDropDownUnderBillingAddress = page.locator("//select[@id='order-billing_address_customer_contact_id']");
this.contactDropDownUnderShippingAddress = page.locator("//select[@id='order-shipping_address_customer_contact_id']");
this.licenseDropDownUnderItemOrdered = page.locator("select[class='admin__control-select required-entry']");
this.emailOrderConfirmationCheckBox = page.locator("//*[@id='send_confirmation']");
this.publishDateColumnHeader = page.locator("th.col-publish-date");
this.subscriptionTypeColumnHeader = page.locator("th.col-subscription-type");
this.startDateColumnHeader = page.locator("th.col-start-date");
this.startDateField = page.locator("input[name*='compass_start_date']");
this.publishDateField = page.locator("input[name*='compass_publish_date']");
this.subscriptionTypeDropDown = page.locator("select[name*='compass_subscription_type']");
this.astmShippingMethods = page.locator("label[for*='s_method_amstrates_amstrates']");
this.astmShippingMethodsRates = page.locator("label[for*='s_method_amstrates_amstrates'] strong");
this.customPriceCheckBox = page.locator("input[id*='item_use_custom_price_']");
this.customPriceTextField = page.locator("input[id*='item_custom_price_']");
this.clickToChangeShippingMethod = page.locator("#order-shipping-method-info a");
this.fedex2ndDayDeliveryRadioButton = page.locator("label[for='s_method_amstrates_amstrates3']");
this.dhlIntlStandardRadioButton = page.locator("label[for='s_method_amstrates_amstrates1']");
this.getCompanyNameUnderBillingAddress = page.locator("#order-billing_address_company");
this.getCompanyNameUnderShippingAddress = page.locator("#order-shipping_address_company");
this.getCompanyNameUnderFreightForwardAddress = page.locator("#order-freight_forward_address_company");
this.fedexOverNightDelivery = page.locator("label[for='s_method_amstrates_amstrates4']");
this.doubleBookingError = page.locator("//div[contains(text(),'TPT learner is ')]");
this.standardService = page.locator("label[for='s_method_amstrates_amstrates8']");
this.getPaymentMethod = page.locator("//span[contains(text(), 'Get available payment methods')]");
this.totalPriceItemOrdered = page.locator(".order-tables tfoot tr td:nth-of-type(5)");
this.productNameUnderSearch = page.locator("#sales_order_create_search_grid_table tbody .col-name");
this.skuUnderSearch = page.locator("#sales_order_create_search_grid_table tbody .col-sku");
this.identiyingNumberRequiredError = page.locator("input#ccterminal_identifying_number + .mage-error");
this.paymentMethodDropDown = page.locator("select#ccterminal_payment_method");
this.PaymentandShippingInfoLabel = page.locator("//span[text()='Payment & Shipping Information']");

this.receiptMethodDropDown = page.locator("select#ccterminal_receipt_method");
this.amountTextFieldUnderPayment = page.locator("input#ccterminal_amount");
this.identifyingNumberTextField = page.locator("input#ccterminal_identifying_number");
this.contactUnderBillingAddress = page.locator(".order-billing-address div.admin__page-section-item-content");
this.contactUnderShippingAddress = page.locator(".order-shipping-address div.admin__page-section-item-content");
this.contactUnderFreightForwardAddress = page.locator(".order-freight-forward-address div.admin__page-section-item-content");
this.promoCodeErrorMessage = page.locator("select#promo-code-major + label.mage-error");
this.priceOfProductByIndex = page.locator(".order-tables tbody tr td:nth-of-type(2) .price");
this.scrollElement = page.locator("a.admin__action-dropdown");
this.faxUnderBillingAddress = page.locator("input#order-billing_address_fax");
this.faxUnderShippingAddress = page.locator("input#order-shipping_address_fax");
this.faxUnderFreighForwardAddress = page.locator("input#order-freight_forward_address_fax");
this.addressDescriptionUnderBillingAddress = page.locator("#order-billing_address_address_description");
this.addressDescriptionUnderShippingAddress = page.locator("#order-shipping_address_address_description");
this.addressDescriptionUnderFreightForwardAddress = page.locator("#order-freight_forward_address_address_description");
this.OrderTotalBookDealerDiscount = page.locator("//tr[@class='book_dealer_discount row-totals']//td[@class='admin__total-amount']/span");
this.OrderTotalMemberDiscount = page.locator("//tr[@class='member_discount row-totals']//td[@class='admin__total-amount']/span");
this.OrderTotalSubscriptionDiscount = page.locator("//tr[@class='subscription_agency_discount row-totals']//td[@class='admin__total-amount']/span");
this.subTotalUnderItemOrdered = page.locator("td.col-subtotal.col-price .price");

this.productSKU = page.locator("td.col-product > span");
this.discountUnderItemOrdered = page.locator("td.col-discount.col-price > span");
this.BookDealerDiscount = page.locator("td.col-discount.col-book-dealer-discount.col-price .price");
this.MemberDiscount = page.locator("td.col-discount.col-member-discount.col-price");
this.SubscriptionAgencyDiscount = page.locator("td.col-discount.col-subscription-agency-discount.col-price .price");
this.RowTaxAmount = page.locator("td.col-tax-amount.col-price .price");
this.RowSubtotalAmount = page.locator("td.col-price.col-row-subtotal .price");
this.QuantityNumber = page.locator("//td[@class='col-qty']/input");
this.recordFoundLabel = page.locator("#sales_order_create_search_grid-total-count");
this.resetFilter = page.locator("#sales_order_create_search_grid button[title='Reset Filter']");
this.sortBySkuOnSearchPage = page.locator("th[data-sort='sku']");
this.skuSearchResults = page.locator("#sales_order_create_search_grid_table tbody .col-sku");
this.skuSearchResultsName = page.locator("#sales_order_create_search_grid_table tbody .col-name");
this.skuSearchResultsPrice = page.locator("#sales_order_create_search_grid_table tbody .price");
this.selectProductFromListCheckbox = page.locator("#sales_order_create_search_grid_table tbody .checkbox");
this.quantityTextFieldsUnderSearchResult = page.locator("#sales_order_create_search_grid_table tbody .col-qty input");
this.productPricesListUnderItemOrderedTable = page.locator("table.order-tables tbody tr td.col-price:nth-of-type(2) > .price");
this.productRowSubtotalUnderItemOrderedTable = page.locator("td.col-price.col-row-subtotal span");
this.pageHeading = page.locator("h1#order-header");
this.noRecordFoundMessageForAddProducts = page.locator("//td[contains(text(),\"We couldn't find any records.\")]");
this.productAssignedToOtherWebsiteErrorMessage = page.locator("//div[contains(text(),'This product is assigned to another website.')]");
this.addProductsToOrder = page.locator("button[title='Add Products to Order']");
this.removeAllButton = page.locator("button[title='Remove All']");
this.productRequireAttentionWarningMessage = page.locator("//span[contains(text(),'product(s) require attention.')]");
this.removeButton = page.locator("button[title='Remove']");
this.consortiaFlagDropDown = page.locator("select#consortia");
this.totalSubtotalPrice = page.locator("tfoot td.col-price:nth-of-type(3) .price");
this.noShippingQuotesAvailableMessage = page.locator("//span[contains(text(),'Sorry, no quotes are available for this order.')]");
this.selectedShippingMethodLabel = page.locator("//*[@id='order-shipping-method-info']/dl/dd");
this.shippingInformationUnderOrderTotal = page.locator("table.admin__table-secondary tr:nth-of-type(3) td.admin__total-mark");
this.imexIntlOvernightTracableShippingMethod = page.locator("label[for='s_method_amstrates_amstrates6']");
this.standardServiceInputTag = page.locator("input#s_method_amstrates_amstrates8");

this.customerShippingAccount = page.locator("input#s_method_customershippingaccount");
this.shippingMethodEBSDropdown = page.locator("#customer_shipping_account_method");
this.shippingAccount = page.locator("#shipping-acct");
this.upsOvernightDeliveryShippingMethod = page.locator("label[for='s_method_amstrates_amstrates11']");
this.quantityFieldUnderItemOrdered = page.locator("input[name*='[qty]']");
this.closeSpecialHandlingDialogBox = page.locator("//h1[contains(text(),'Special')]//following-sibling::button");
this.fedexStandardGroundButton = page.locator("label[for='s_method_amstrates_amstrates5']");
this.royaltyErrorMessage = page.locator("//div[contains(text(),'Royalty products must be ordered independent of other products')]");
this.orderTotalLabels = page.locator(".admin__table-secondary tbody tr.row-totals .admin__total-mark");
this.orderTotalPrice = page.locator(".admin__table-secondary tbody tr.row-totals .admin__total-amount span");
this.membershipDiscountColumnUnderItemOrderedValues = page.locator("td.col-member-discount span");
// this.contactDropDownUnderBillingAddress = page.locator("//select[@id='order-billing_address_customer_contact_id']");
// this.contactDropDownUnderShippingAddress = page.locator("//select[@id='order-shipping_address_customer_contact_id']");
this.TPTOneQuantityError = page.locator("//div[contains(text(),'Please add only one quantity per product.')]");
this.itemOrderedColumn = page.locator("thead tr.headings th span");
this.standardServiceRate = page.locator("#order-shipping-method-info > dl > dd > strong > span");
this.shippingInfo = page.locator("#order-shipping-method-info > dl > dd");
this.PaymentMethodHeader = page.locator("(//span[text()='Payment Method'])[1]");
this.contractDropdown = page.locator("#contract");
this.firstRowSalesOrderTable = page.locator("//table[@id='sales_order_create_search_grid_table']//tbody//tr[1]//td");
this.participantsInput = page.locator("//span[text()='Number of Participants']//..//..//input");
this.okButton = page.locator("//aside[@role='dialog']//footer//span[text()='OK']");
this.ups2ndDeliveryMethod = page.locator("label[for='s_method_amstrates_amstrates9']");
this.monthDropDown = page.locator("select[data-handler='selectMonth']");
this.yearDropDown = page.locator("select[data-handler='selectYear']");
this.activeDateLabel = page.locator("td[data-handler='selectDay'] a");
this.goToTodayButton = page.locator("button.ui-datepicker-current");
this.closeButtonForCalender = page.locator("button.ui-datepicker-close");
this.startDateCalenderIcon = page.locator("input[name*='[compass_start_date]'] + button");
this.publishDateCalenderIcon = page.locator("input[name*='[compass_publish_date]'] + button");
this.updateItemPopTextMessage = page.locator("//div[contains(text(),\"Changes to product line items have not been saved. Click ‘OK' to accept without updates. Click 'Cancel' and check Updates were made. Then 'Submit’ the order.\")]");
this.dialogOkButton = page.locator("button.action-accept");
this.crossButton = page.locator("aside._show button.action-close");
this.cancelButton = page.locator("button.action-dismiss");
this.ebsSkuFilterField = page.locator("input#sales_order_create_search_grid_filter_ebs_sku");
this.ebsSkuSearchResults = page.locator("#sales_order_create_search_grid_table tbody .col-ebs_sku");
this.startDateErrorMessage = page.locator("input[name*='[compass_start_date]'] +button + label.mage-error");
this.publishDateErrorMessage = page.locator("input[name*='[compass_publish_date]'] +button + label.mage-error");
this.addProductByEbsSkuButton = page.locator("#ebs_sku_button");
this.addAnotherButtonForEbsSku = page.locator("button[data-ui-id='additional-ebs-area-ebs-sku-add-addbutton']");
this.addToOrderForEbsSkuFunc = page.locator("button[onclick='addByEbsSku.submitEbsSkuForm()']");
this.productNameSearchResult = page.locator("#sales_order_create_search_grid_table tbody tr:first-child td.col-name");
this.orderItemList = page.locator("#order-items_grid>table>tbody>tr");
this.changeShippingMethod = page.locator("//span[text()='Click to change shipping method']");
this.standardServicePrice = page.locator("//label[contains(text(),'Standard Service')]//span");
this.FEDEX2ndDayDeliveryCheckbox = page.locator("//label[contains(text(),'FEDEX - 2nd Day Delivery')]");
this.FEDEX2ndDayDelivery = page.locator("//label[contains(text(),'FEDEX - 2nd Day Delivery')]//span");
this.shippingCharge = page.locator("//tr[@id='shipping-exclude-tax']//td//span");
this.ShippingTableRate = page.locator("(//div[contains(@class,'order-shipping-method-info')])/descendant::strong/span");

this.getDuplicateTPTProductErrorMsge = (): Locator => {
    return page.locator("//div[@class='message message-error']");
};

// Methods for dynamic shipping locators
this.changeShippingCheckbox = (value: string): Locator => {
    return page.locator(`//label[contains(text(),'${value}')]`);
};

this.changeShippingPrice = (value: string): Locator => {
    return page.locator(`//label[contains(text(),'${value}')]//span`);
};
      
  }

 



}